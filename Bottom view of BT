import java.util.*;

class Node{
    int val;
    Node left,right;
    Node(int val){
        this.val=val;
        this.left=null;
        this.right=null;
    }
}

class Pair{
    Node node;
    int line;
    Pair(Node node,int line){
        this.line=line;
        this.node=node;
    }
    
    Node getKey(){
        return this.node;
    }
    
    int getValue(){
        return this.line;
    }
}

public class Main{
    public static ArrayList<Integer> topview(Node root){
        
        ArrayList<Integer> ans=new ArrayList<>();
        
        if(root==null){
            return ans;
        }
        
        Map<Integer,Integer> h=new TreeMap<>();
        
        Queue<Pair> q = new LinkedList<>();
        
        q.offer(new Pair(root,0));
        
        while(!q.isEmpty()){
            Pair p=q.poll();
            Node node=p.getKey();
            int line=p.getValue();
            
            
                h.put(line,node.val);
            
            
            if(node.left!=null){
                q.offer(new Pair(node.left,line-1));
            }
            
            if(node.right!=null){
                q.offer(new Pair(node.right,line+1));
            }
        }
        
        for(int m:h.values()){
            ans.add(m);
        }
        
        return ans;
        
    }
    public static void main(String[] args){
        Node root = new Node(1);
        root.left = new Node(2);
        root.left.left = new Node(4);
        root.left.right = new Node(10);
        root.left.left.right = new Node(5);
        root.left.left.right.right = new Node(6);
        root.right = new Node(3);
        root.right.right = new Node(10);
        root.right.left = new Node(9);
        
       ArrayList<Integer> l=topview(root);
       
       System.out.println(l);
    }
}
