
/*
class Node{
    int data;
    Node left;
    Node right;
    Node(int data){
        this.data = data;
        left=null;
        right=null;
    }
}
*/


class Pair{
   Node node;
   int val;
   Pair(Node node,int val){
       this.node=node;
       this.val=val;
   }
   
   Node getKey(){
       return node;
   }
   
   int getValue(){
       return val;
   }
}
class Tree {
    ArrayList<Integer> postOrder(Node node) {
        ArrayList<Integer> l1=new ArrayList<>();
        ArrayList<Integer> l2=new ArrayList<>();
        ArrayList<Integer> l3=new ArrayList<>();
        
        Stack<Pair> st=new Stack<>();
        
        if(node==null){
            return l3;
        }
        
        st.push(new Pair(node,1));
        
        while(!st.isEmpty()){
            Pair p=st.pop();
            Node nod=p.getKey();
            int num=p.getValue();
            
            if(num==1){
                l1.add(nod.data);
                st.push(new Pair(nod,num+1));
                
                
                if(nod.left!=null){
                    st.push(new Pair(nod.left,1));
                }
            }
            
            else if(num==2){
                l2.add(nod.data);
                st.push(new Pair(nod,num+1));
                
                if(nod.right!=null){
                    st.push(new Pair(nod.right,1));
                }
            }
            
            else{
                l3.add(nod.data);
            }
        }
        
        return l3;
    }
}
