import java.util.*;

public class Main
{
    public static void insert(Queue<Integer> q,int pos){
        int n=q.size();
        int val=0;
        for(int i=0;i<n;i++){
            int temp=q.poll();
            if(pos==i){
               val=temp; 
            }
            else{
                q.offer(temp);
            }
        }
        q.offer(val);
    }
    
    public static int fm(Queue<Integer> q,int index){
         int minIndex = -1;
    int minValue = Integer.MAX_VALUE;
    int size = q.size();
    for (int i = 0; i < size; i++) {
        int current = q.poll();
        if (i <=index && current < minValue) {
            minIndex = i;
            minValue = current;
        }
        q.offer(current);
    }
    return minIndex;
    }
    
    public static void sort(Queue<Integer> q){
        int n=q.size();
        for(int i=0;i<n;i++){
            int mi=fm(q,n-i-1);
            insert(q,mi);
        }
    }
    
	public static void main(String[] args) {
		Queue<Integer> q=new LinkedList<Integer>();
       for(int i=100;i>=1;i--){
           q.add(i);
       }
		sort(q);
		System.out.println();
		while(!q.isEmpty()){
		    System.out.print(q.poll()+" ");
		}
	}
}
