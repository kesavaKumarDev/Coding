class Solution {
    public int countStudents(int[] students, int[] sandwiches) {
        Queue<Integer> q=new LinkedList<>();
        Stack<Integer> s=new Stack<>();
        int n=students.length;

        for(int i=0;i<n;i++){
            q.offer(students[i]);
            s.push(sandwiches[n-i-1]);
        }

        int count=0; // to act as terminating condition

        while(q.size()>0 && count<q.size()){
            if(q.peek()==s.peek() ){  // checking whether the they are equal or not 
                s.pop();
                q.poll();
                count=0;
            }
            else{
                q.offer(q.poll());  // if not then poll the front of queue and enqueue at the last
                count++;   // increment the last served variable 
            }
        }

        return q.size();  // return the size of the queue , this number pf students were unable to eat lunch
    }
}


